{"ast":null,"code":"let state = {\n  profilePage: {\n    newPostText: '',\n    posts: [{\n      id: 1,\n      message: 'Hi, how are you?',\n      likesCounter: 15\n    }, {\n      id: 2,\n      message: 'Fine, thanks',\n      likesCounter: 25\n    }, {\n      id: 3,\n      message: 'WHOOP WHOOP!',\n      likesCounter: 48\n    }]\n  },\n  dialogsPage: {\n    dialogs: [{\n      id: 1,\n      name: \"Alex\"\n    }, {\n      id: 2,\n      name: \"Kate\"\n    }, {\n      id: 3,\n      name: \"Bob\"\n    }, {\n      id: 4,\n      name: \"Michael\"\n    }, {\n      id: 5,\n      name: \"Kostya\"\n    }],\n    messages: [{\n      id: 1,\n      message: \"Hi there\"\n    }, {\n      id: 2,\n      message: \"Hello bud\"\n    }, {\n      id: 3,\n      message: \"Howdy\"\n    }, {\n      id: 4,\n      message: \"Greetings!\"\n    }, {\n      id: 5,\n      message: \"Did you sign for Stalker 2?\"\n    }]\n  },\n  sideBar: {\n    friends: [{\n      id: 1,\n      name: \"Alex\"\n    }, {\n      id: 2,\n      name: \"Kate\"\n    }, {\n      id: 3,\n      name: \"Bob\"\n    }, {\n      id: 4,\n      name: \"Alex\"\n    }]\n  }\n};\n\nlet rerenderEntireTree = () => {\n  console.log('state was changed');\n};\n\nexport const addPost = () => {\n  let newPost = {\n    id: 5,\n    message: state.profilePage.newPostText,\n    likesCounter: 1\n  };\n  state.profilePage.posts.push(newPost);\n  state.profilePage.newPostText = '';\n  rerenderEntireTree(state);\n};\nexport const UpdateNewPostText = newText => {\n  state.profilePage.newPostText = newText;\n  rerenderEntireTree(state);\n};\n_c = UpdateNewPostText;\nexport const subscribe = observer => {};\nexport default state;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateNewPostText\");","map":{"version":3,"sources":["C:/Dev/Incubator/Social_TS/Social_TS/snts/src/Components/redux/state.tsx"],"names":["state","profilePage","newPostText","posts","id","message","likesCounter","dialogsPage","dialogs","name","messages","sideBar","friends","rerenderEntireTree","console","log","addPost","newPost","push","UpdateNewPostText","newText","subscribe","observer"],"mappings":"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","sourcesContent":["\r\n\r\ntype FriendType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type FriendsType = Array<FriendType>\r\n\r\nexport type SideBarType = {\r\n    friends: FriendsType\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type MessagesType = Array<MessageType>\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type DialogsType = Array<DialogType>\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogsType\r\n    messages: MessagesType\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCounter: number\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    sideBar: SideBarType\r\n}\r\n\r\nlet state: RootStateType = {\r\n    profilePage: {\r\n        newPostText: '',\r\n        posts: [\r\n            {id: 1, message: 'Hi, how are you?', likesCounter: 15},\r\n            {id: 2, message: 'Fine, thanks', likesCounter: 25},\r\n            {id: 3, message: 'WHOOP WHOOP!', likesCounter: 48}\r\n        ],\r\n    },\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: \"Alex\"},\r\n            {id: 2, name: \"Kate\"},\r\n            {id: 3, name: \"Bob\"},\r\n            {id: 4, name: \"Michael\"},\r\n            {id: 5, name: \"Kostya\"}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: \"Hi there\"},\r\n            {id: 2, message: \"Hello bud\"},\r\n            {id: 3, message: \"Howdy\"},\r\n            {id: 4, message: \"Greetings!\"},\r\n            {id: 5, message: \"Did you sign for Stalker 2?\"}\r\n        ]\r\n    },\r\n    sideBar: {\r\n        friends: [\r\n            {id: 1, name: \"Alex\"},\r\n            {id: 2, name: \"Kate\"},\r\n            {id: 3, name: \"Bob\"},\r\n            {id: 4, name: \"Alex\"}\r\n        ]\r\n    },\r\n}\r\n\r\nlet rerenderEntireTree = () => {\r\n    console.log('state was changed')\r\n}\r\n\r\nexport const addPost = () => {\r\n    let newPost: PostType = {\r\n        id: 5,\r\n        message: state.profilePage.newPostText,\r\n        likesCounter: 1\r\n    }\r\n    state.profilePage.posts.push(newPost)\r\n    state.profilePage.newPostText = ''\r\n    rerenderEntireTree(state)\r\n}\r\n\r\nexport const UpdateNewPostText = (newText: string) => {\r\n\r\n    state.profilePage.newPostText = newText\r\n\r\n    rerenderEntireTree(state)\r\n}\r\n\r\nexport const subscribe = (observer) => {\r\n\r\n}\r\n\r\nexport default state;\r\n"]},"metadata":{},"sourceType":"module"}