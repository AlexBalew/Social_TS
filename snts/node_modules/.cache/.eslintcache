[{"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\index.tsx":"1","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\reportWebVitals.ts":"2","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\App.tsx":"3","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\redux\\state.tsx":"4","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Nav\\Nav.tsx":"5","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\Profile.tsx":"6","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Header\\Header.tsx":"7","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\Dialogs.tsx":"8","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"9","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"10","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"11","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\MessageItem\\MessageItem.tsx":"12","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"13"},{"size":936,"mtime":1628696405739,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1625560419351,"results":"16","hashOfConfig":"15"},{"size":1482,"mtime":1628692520761,"results":"17","hashOfConfig":"15"},{"size":2432,"mtime":1628696954984,"results":"18","hashOfConfig":"15"},{"size":1209,"mtime":1628339007279,"results":"19","hashOfConfig":"15"},{"size":772,"mtime":1628692520755,"results":"20","hashOfConfig":"15"},{"size":341,"mtime":1628080123569,"results":"21","hashOfConfig":"15"},{"size":801,"mtime":1628084180643,"results":"22","hashOfConfig":"15"},{"size":513,"mtime":1623751758059,"results":"23","hashOfConfig":"15"},{"size":1824,"mtime":1628694534470,"results":"24","hashOfConfig":"15"},{"size":394,"mtime":1627053381109,"results":"25","hashOfConfig":"15"},{"size":292,"mtime":1627053381098,"results":"26","hashOfConfig":"15"},{"size":402,"mtime":1628075622187,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lgym3a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\index.tsx",[],["59","60"],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\reportWebVitals.ts",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\App.tsx",["61","62","63"],"import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Nav from './Components/Nav/Nav';\nimport Profile from './Components/Profile/Profile';\nimport Dialogs from \"./Components/Dialogs/Dialogs\";\nimport {Route} from \"react-router-dom\";\nimport {\n    addPost,\n    DialogsPageType,\n    ProfilePageType,\n    RootStateType,\n    SideBarType,\n    UpdateNewPostText\n} from './Components/redux/state'\n\ntype AppPropsType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n    sideBar: SideBarType\n    addPost: (postMessage: string) => void\n    UpdateNewPostText: (newText: string) => void\n    newPostText: string\n}\n\nconst App = (props: AppPropsType) => {\n\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Nav/>\n            <div className='app-wrapper-content'>\n                <Route path={'/Profile'}\n                       render={() => <Profile posts={props.profilePage.posts}\n                                              addPost={props.addPost}\n                                              UpdateNewPostText={props.UpdateNewPostText}\n                                              newPostText={props.newPostText}/>}/>\n                <Route path={'/Dialogs'} render={() => <Dialogs dialogs={props.dialogsPage.dialogs}\n                                                                messages={props.dialogsPage.messages}/>}/>\n            </div>\n        </div>\n    );\n}\nexport default App;","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\redux\\state.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Nav\\Nav.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\Profile.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Header\\Header.tsx",["64"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/640px-React-icon.svg.png' />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["65"],"import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://www.imagesystems.com.mt/wp-content/uploads/2019/10/Who-we-are-Image-1-1-768x657.png'>\r\n                </img>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileInfo;\r\n","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["66"],"import React, {ChangeEvent } from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {PostType} from \"../../redux/state\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (postMessage: string) => void\r\n    newPostText: string\r\n    UpdateNewPostText: (newText: string) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.posts.map(m => <Post message={m.message} likesCounter={m.likesCounter} id={m.id}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const postMessage = () => {\r\n        if (newPostElement.current) {\r\n            props.addPost(newPostElement.current.value)\r\n        }\r\n    }\r\n\r\n    let onPostChange =()=> {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current.value\r\n            props.UpdateNewPostText(text)\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            props.UpdateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div>\r\n                <textarea ref={newPostElement} value={props.newPostText} onChange={onChangeHandler}/>\r\n                <div>\r\n                    <button onClick={postMessage}>\r\n                        Add post\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    New post\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Dialogs\\MessageItem\\MessageItem.tsx",[],"C:\\Dev\\Incubator\\Social_TS\\Social_TS\\snts\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":5,"nodeType":"73","messageId":"74","endLine":9,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":12,"column":5,"nodeType":"73","messageId":"74","endLine":12,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":14,"column":5,"nodeType":"73","messageId":"74","endLine":14,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":9,"column":13,"nodeType":"79","endLine":9,"endColumn":124},{"ruleId":"77","severity":1,"message":"78","line":9,"column":17,"nodeType":"79","endLine":10,"endColumn":119},{"ruleId":"71","severity":1,"message":"80","line":25,"column":9,"nodeType":"73","messageId":"74","endLine":25,"endColumn":21},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'addPost' is defined but never used.","Identifier","unusedVar","'RootStateType' is defined but never used.","'UpdateNewPostText' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'onPostChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]